class Solution {

    public int change(int amount,int[] coins) {
        
        int dp[][] = new int[coins.length][amount+1];

        for(int row[] : dp) Arrays.fill(row,-1);
        
        int value = recursion(coins.length-1,amount,coins,dp);
        
        return value;

    }

    private int recursion(int index, int amount,int coins[],int dp[][])
    {
        if(index == 0)
        {
            if(amount % coins[0] == 0  )
            {
                return 1;
            }
            return 0;
        }

        if(dp[index][amount]!=-1)
        return dp[index][amount];
        
        int nottake = recursion(index-1,amount,coins,dp);
        int take = 0;

        if(amount>=coins[index])
            take =  recursion(index,amount-coins[index],coins,dp);

        dp[index][amount] = take+nottake;

        return dp[index][amount];
          
    }
}