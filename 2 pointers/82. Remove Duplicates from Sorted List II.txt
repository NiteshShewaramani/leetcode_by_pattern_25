/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null)
        return head;

        ListNode slow = head;
        ListNode fast = head.next;
        ListNode preslow = null;
        while(fast!=null)
        {
            if(slow.val != fast.val)
            {
                preslow = slow;
                slow = slow.next;
                fast = fast.next;
            }
            else
            {
                while(fast!=null && slow.val == fast.val)
                {
                    fast = fast.next;
                }
                if(preslow == null)
                {
                    head = fast;
                }
                else
                preslow.next = fast;

                slow = fast;
                if(fast!=null)
                fast = fast.next;
            }
        }
        return head;
        
    }
}