class Solution {
    //using 3 pointers
    public void sortColors(int[] nums) {
        // 3-way partition used in quick sort
        //here i is what we call pivot in the 3 way partioning video
        int lt = 0, i = 0, gt = nums.length - 1;
        while (i <= gt) {
            if (nums[i] == 0) {
                swap(nums, i, lt);
                lt++;i++;
            } else if (nums[i] == 2) {
                swap(nums, i, gt);
                gt--;
            } else { // nums[i] == 1
                i++;
            }
        }

    }
    private void swap(int[] nums, int p1, int p2) {
        int temp = nums[p1];
        nums[p1] = nums[p2];
        nums[p2] = temp;
    }



    public void sortColorsCounters(int[] nums) {
        int count0=0;
        int count1=0;
        int count2=0;
        for(int i: nums)
        {
            if(i==0)
            ++count0;
            else if(i==1)
            ++count1;
            else
            ++count2;

        }
        for(int i=0;i<nums.length;i++)
        {
            if(count0>0)
            {
                nums[i]=0;
                --count0;
            }
            else if(count1>0)
            {
                nums[i]=1;
                --count1;
            }
            else
            {
                nums[i]=2;
                --count2;
            }
            
        }
        
    }
}