class Solution {
//TC O(N) SC O(1)
    public void rotate(int[] nums, int k) {
            k%=nums.length; // no. of rotations if k=7 => 7%7=0 rotations
            //ex: [1,2,3,4,5,6,7]
            reverse(nums,0,nums.length-1); 
            //first reversing the whole array [7,6,5,4,3,2,1] ;
            //next we divide arrays into 2 parts
            //ex; [7,6,5,4,3,2,1] into [7,6,5] and [4,3,2,1]
            //so now reversing first arrays i.e from 0 to k-1
            reverse(nums,0,k-1);
            //now second part from k to end
            reverse(nums,k,nums.length-1);
    }
    private void  reverse(int[] nums, int start, int end){
        while(start<end){
            int temp=nums[start];
            nums[start++]=nums[end];
            nums[end--]=temp;   
        }
    }
}