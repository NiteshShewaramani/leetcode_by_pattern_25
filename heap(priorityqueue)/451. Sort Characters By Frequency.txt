//TC - O(n+logn)
class Solution {
    public String frequencySort(String s) {
        Map<Character, Integer> map = new HashMap<>();
//O(n)
        for (char c : s.toCharArray())
            map.put(c, map.getOrDefault(c, 0) + 1);
		//max heap 				
        PriorityQueue<Map.Entry<Character, Integer>> pq = new PriorityQueue<>((a, b) -> b.getValue() - a.getValue());
//O(logn)       
 pq.addAll(map.entrySet());
				
        StringBuilder sb = new StringBuilder();
        while (!pq.isEmpty()) {
            Map.Entry e = pq.poll();
            for (int i = 0; i < (int)e.getValue(); i++) 
                sb.append(e.getKey());
        }
        return sb.toString();
        
    }
}