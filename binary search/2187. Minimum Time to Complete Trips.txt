class Solution {
    public long minimumTime(int[] time, int totalTrips) {
        /**
        Apply binary serach on time taken .
        start = 0 minimum value
        end = minimun time taken  * totalTrips
        ex - time = [1,2,3], totalTrips = 5
        bus no at index 0 takes 1 min to complete a trip so at 5 minute it can complete 5 trips so we know 
        at at 5 minute min([1,2,3]) * totalTrips(5) is the maximum time we need
        another example time = [2,3], totalTrips = 10
        start = 0
        end = min([2,3]) * totalTrips(10) = 20 , in 20 time/minute we can complete the trips
         */
        int min = Integer.MAX_VALUE;
        for(int t:time)
            min=Math.min(min,t);

        long l=0;
        long r =1l*min*totalTrips;
        while(l<=r){
            long mid = (l+r)/2;
            if(!isValid(time,totalTrips,mid)){
                l=mid+1;
            }else{
                r=mid-1;
            }
        }
        return l;
    }

    private boolean isValid(int[] time,int totalTrips,long mid){
        int sum=0;
        for(int t:time){
            sum+=mid/t;
            if(sum>=totalTrips)
                return true;
        }
        return false;
    }
}